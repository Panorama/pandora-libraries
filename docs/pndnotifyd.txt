
Quick factsheet for pndnotifyd
------------------------------

Invocation arguments
--------------------

./bin/pndnotifyd [-d] [##]
-d      Daemon mode; detach from terminal, chdir to /tmp, suppress output. Optional.
-n      Do not scan on launch; default is to run a scan for apps when ./bin/pndnotifyd is invoked.
##      A numeric value is interpreted as number of seconds between checking for filesystem changes. Default 10.
Signal: HUP the process to force reload of configuration and reset the notifier watch paths

-d Deaemon Mode would be normal operation as invoked by init; for running in debug or development situations
   you might wish to just run it without arguments and thus get lots of output to stdout

-n suppresses doing an autodiscovery (and .desktop cleanup) immediately upon launch (ie: waiting for a
   watched directory to get altered.) Normally we want a scan on start, to ensure .desktops are accurately
   portrayed.

## allows you to specify the 'poll' frequency; note that this is a pretty lightweight poll (just checking the
   inotify queue), so can be fairly frequent without impact. Default is 10 seconds so a practical worst case is
   SD is inserted and nothing happens for say 8 seconds or so. (This option may become irrelevent later.)
   ex: ./bin/pndnotifyd 10

Lastly, should you alter the config files in /etc/pandora/conf you might wish to reconsume them -- just hup the
process (or restart it entirely of course.)

Config files
------------

pndnotifyd will consume 'conf', 'apps' and 'desktop' config files in that order. ('conf' is implicit and may not
even be present; if present, it allows all config files themselves to be relocated.) 'apps' will specify
the searchpath for applications, the notifypath to watch for app changes and mounts. 'desktop' will
specify where to drop .desktop and icon files, and whethor or not a HUP/activity is needed to some process for
it to recognize the new .desktop files

Note that the hup script is not required, and in fact could well be commented out:

[launcher]
hupscript	pnd_hup.sh

If the 'hupscript' key exists, then its associated value will be attempted to run after an auto-discovery run.
(The script name provided will be located using the searchpath pnd.searchpath, just like for pnd_run.sh.) If
the launcher.hupscript key does not exist (is commented out), then no hup script is invoked.

The hup script is expected to perform a SIGHUP against matchbox desktop to force it to redetect the .desktop
files immediately, rather than waiting up to 30 seconds. It could also kick other launchers, or perform other
actions than SIGHUPing.
